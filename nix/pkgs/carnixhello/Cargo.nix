# Generated by carnix 0.9.2: carnix generate-nix --standalone --src=./src
with import <nixpkgs> {};
with buildRustCrateHelpers;
let inherit (lib.lists) fold;
    inherit (lib.attrsets) recursiveUpdate;
in
let cratesIO = callPackage ./crates-io.nix { };
    crates = cratesIO // rec {
# carnixhello-0.1.0

  crates.carnixhello."0.1.0" = deps: { features?(features_.carnixhello."0.1.0" deps {}) }: buildRustCrate {
    crateName = "carnixhello";
    version = "0.1.0";
    authors = [ "Benjamin Summers <benjamin@tlon.io>" ];
    src = exclude [ ".git" "target" ] ../../../pkg/carnixhello;
    type = [ "staticlib" ];
    dependencies = mapFeatures features ([
      (cratesIO.crates."regex"."${deps."carnixhello"."0.1.0"."regex"}" deps)
    ]);
  };
  features_.carnixhello."0.1.0" = deps: f: updateFeatures f (rec {
    carnixhello."0.1.0".default = (f.carnixhello."0.1.0".default or true);
    regex."${deps.carnixhello."0.1.0".regex}".default = true;
  }) [
    (cratesIO.features_.regex."${deps."carnixhello"."0.1.0"."regex"}" deps)
  ];


# end

}; in

rec {
  carnixhello = crates.crates.carnixhello."0.1.0" deps;
  __all = [ (carnixhello {}) ];
  deps.aho_corasick."0.5.3" = {
    memchr = "0.1.11";
  };
  deps.carnixhello."0.1.0" = {
    regex = "0.1.80";
  };
  deps.kernel32_sys."0.2.2" = {
    winapi = "0.2.8";
    winapi_build = "0.1.1";
  };
  deps.libc."0.2.47" = {};
  deps.memchr."0.1.11" = {
    libc = "0.2.47";
  };
  deps.regex."0.1.80" = {
    aho_corasick = "0.5.3";
    memchr = "0.1.11";
    regex_syntax = "0.3.9";
    thread_local = "0.2.7";
    utf8_ranges = "0.1.3";
  };
  deps.regex_syntax."0.3.9" = {};
  deps.thread_id."2.0.0" = {
    kernel32_sys = "0.2.2";
    libc = "0.2.47";
  };
  deps.thread_local."0.2.7" = {
    thread_id = "2.0.0";
  };
  deps.utf8_ranges."0.1.3" = {};
  deps.winapi."0.2.8" = {};
  deps.winapi_build."0.1.1" = {};
}
